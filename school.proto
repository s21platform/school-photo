syntax = "proto3";

option go_package = "./school-proto";

// Этот сервис предоставляет методы для запросов на школьную платформу.
service SchoolService {
    // Метод для получения токена sberclass, которым будут подписаны запросы к платформе
    rpc Login (SchoolLoginRequest) returns (SchoolLoginResponse) {}
    // Методы для получения данных с API школы
    rpc GetCampuses (Empty) returns (CampusesOut) {}
    rpc GetTribesByCampusUuid (CampusUuidIn) returns (TribesOut) {}
    // Метод для получения списка пиров
    rpc GetPeers(GetPeersIn) returns (GetPeersOut) {}
    // Метод для получения информации о пользователях(пирах)
    rpc GetParticipantData(GetParticipantDataIn) returns (GetParticipantDataOut){}
}

// Запрос на авторизацию
message SchoolLoginRequest {
    // email от edu.21-school.ru формата nickname@student.21-school.ru
    string email = 1;
    // Пароль пользователя от edu.21-school.ru
    string password = 2;
}
// Ответ на запрос авторизации
message SchoolLoginResponse {
    // Авторизационный токен JWT
    string token = 1;
}


// Запрос на получение всех кампусов
message Empty {}
// Сообщение для выходных данных
message Campus {
    // Uuid кампуса
    string campusUuid = 1;
    // Сокращенное название кампуса
    string shortName = 2;
    // Полное название кампуса
    string fullName = 3;
}
// Ответ на запрос на получение всех кампусов
message CampusesOut {
    repeated Campus campuses = 1;
}


// Запрос на получение всех трайбов кампуса
message CampusUuidIn {
    // Uuid кампуса, который призходит от community сервиса
    string campus_uuid = 1;
}
// Сообщение для выходных данных
message Tribe {
    // id  тайба
    int32 id = 1;
    // Название трайба
    string name = 2;
}
// Ответ на запрос на получение всех трайбов кампуса
message TribesOut {
    // Список трайбов
    repeated Tribe tribes = 1;
}


 //Запрос на получение списка пиров
message GetPeersIn {
    // Uuid кампуса
    string campusUuid = 1;
    //Kоличество записей для возвращения
    int64 limit = 2; 
    //Смещение 
    int64 offset = 3;
}

// Ответ на запрос на получение списка пиров
message GetPeersOut {
    repeated string peer = 1; 
}

message GetParticipantDataIn{
    string login = 1;
}
message GetParticipantDataOut {
    string className = 1;
    string parallelName = 2;
    int64 expValue = 3;
    int32 level = 4;
    int64 expToNextLevel = 5;
    string campusUuid  = 6;
    string status = 7;
    repeated Skills skills = 8;
    int64 peerReviewPoints = 9;
    int64 peerCodeReviewPoints = 10;
    int64 coins = 11;
    repeated Badges badges = 12;
}


message Skills{
    string name = 1;
    int32 points = 2;
}

message Badges {
    string name = 1;
    string receiptDateTime = 2;
    string iconURL = 3;
}

